name: Tests

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  tests:
    env:
      NPROC: 2

    strategy:
      fail-fast: false
      matrix:
        nim-version: [ 1.2.14, 1.4.8, 1.6.0 ]
        platform:
          - {
            icon: 🍎,
            os: macos,
            shell: bash --noprofile --norc -eo pipefail
          }
          - {
            icon: 🐧,
            os: ubuntu,
            shell: bash --noprofile --norc -eo pipefail
          }
          - {
            icon: 🏁,
            os: windows,
            shell: msys2
          }

    name: ${{ matrix.platform.icon }} ${{ matrix.platform.os }} - Nim v${{ matrix.nim-version }}

    runs-on: ${{ matrix.platform.os }}-latest

    defaults:
      run:
        shell: ${{ matrix.platform.shell }} {0}

    steps:
      - name: Install tools and libraries via APT (Linux)
        if: matrix.platform.os == 'ubuntu'
        run: |
          sudo apt install -y valgrind

      - name: Install tools and libraries via MSYS2 (Windows)
        uses: msys2/setup-msys2@v2
        if: matrix.platform.os == 'windows'
        with:
          msystem: UCRT64
          update: true
          install: >
            base-devel
            git
            mingw-w64-ucrt-x86_64-toolchain

      - name: Install choosenim and Nim tooling
        run: |
          mkdir -p "${HOME}/Downloads"
          cd "${HOME}/Downloads"
          curl https://nim-lang.org/choosenim/init.sh -sSf -O
          chmod +x init.sh
          if [[ ${{ matrix.platform.os }} = windows ]]; then
            mkdir -p "$(cygpath "${USERPROFILE}")/.nimble/bin"
          fi
          CHOOSENIM_CHOOSE_VERSION=${{ matrix.nim-version }} ./init.sh -y

      - name: Checkout sources from GitHub
        uses: actions/checkout@v2

      - name: Install project dependencies
        run: |
          if [[ ${{ matrix.platform.os }} = windows ]]; then
            export PATH="$(cygpath "${USERPROFILE}")/.nimble/bin:${PATH}"
          fi
          export PATH="${HOME}/.nimble/bin:${PATH}"
          nimble --accept install
          if [[ ${{ matrix.platform.os }} = windows ]]; then
            rm -rf "$(cygpath "${USERPROFILE}")/.nimble/pkgs/chronos-3"*
          fi
          rm -rf "${HOME}/.nimble/pkgs/chronos-3"*

      - name: Build and run tests
        run: |
          if [[ ${{ matrix.platform.os }} = windows ]]; then
            export PATH="$(cygpath "${USERPROFILE}")/.nimble/bin:${PATH}"
          fi
          export PATH="${HOME}/.nimble/bin:${PATH}"
          nimble test

      - name: Build and run helgrind tasks (Linux)
        if: matrix.platform.os == 'ubuntu'
        run: |
          export PATH="${HOME}/.nimble/bin:${PATH}"
          nimble helgrind_achannels
